from sys import stdout
from socket import socket, AF_INET, SOCK_STREAM
from argparse import ArgumentParser 
from time import perf_counter 

def parse_arguments():
    parser = ArgumentParser()
    parser.add_argument('IP', help='Host or network IP')
    parser.add_argument('start_port', help='starting port number', type=int)
    parser.add_argument('end_port', help='ending port number', type=int)
    return parser.parse_args()


def probe_port(ip, port, result=1): 
    try: 
        sock = socket(AF_INET, SOCK_STREAM) 
        sock.settimeout(0.5) 
        r = sock.connect_ex((ip, port)) 
        if r == 0: 
            print(port)
            sock.close()
            return 0
      
    except Exception as e: 
        pass 
    return r


if __name__ == '__main__':
    start = perf_counter()
    args = parse_arguments()
    open_ports =[] 
    ports = range(args.start_port, args.end_port)

    for port in ports: 
        stdout.flush() 
        response = probe_port(args.IP, port) 
        if response == 0: 
            open_ports.append(port) 
        

    if open_ports: 
        print ("Open Ports are: ") 
        print (sorted(open_ports)) 

    else: 
        print ("Looks like no ports are open :(")
    
    end = perf_counter()
    print(end-start)
    