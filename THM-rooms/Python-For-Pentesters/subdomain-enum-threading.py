from requests import get, ConnectionError
from time import perf_counter
from argparse import ArgumentParser, Namespace
from colorama import Fore 
from threading import Thread 

start = perf_counter()

def parse_arguments() -> Namespace:
    parser = ArgumentParser()
    parser.add_argument('root_domain', help='root domain: site.com')
    parser.add_argument('wordlist_file', help='wordlist file name')
    parser.add_argument('-v', '--verbose', action='store_true', help='enable verbosity')
    return parser.parse_args()


def load_wordlist(filename: str) -> list:
    # load the wordlist from a file 
    with open(filename, 'r') as file:
        return file.readlines()
   
   
def check(subdomain: str) -> None:
    try:
        if args.verbose:
            print(f'Testing: {Fore.GREEN}http://{subdomain[:-1]}.{args.root_domain}{Fore.RESET}')
        get(f'http://{subdomain[:-1]}.{args.root_domain}')
        
    except ConnectionError:
        pass
    
    else:
        print(f'{Fore.RED}Valid subDomain: {Fore.RESET}', subdomain)
        
        
        
if __name__ == '__main__':
    # threads: list = []
    args = parse_arguments()
    wordlist = load_wordlist(args.wordlist_file)
    
    # Create a thread for each subdomain and start it 
    for subdomain in wordlist:
        Thread(target=check, args=[subdomain]).start()
        # threads.append(Thread(target=check, args=[subdomain]))
        # threads[-1].start()
        
            
    # # Wait until all the threads finish 
    # for thread in threads:
    #     thread.join()

    
end = perf_counter()

print(end-start)